"use strict";(self.webpackChunkvanillajs_ethers=self.webpackChunkvanillajs_ethers||[]).push([[239],{1636:(e,o,t)=>{t(2132)},2510:(e,o,t)=>{var n=t(2618),a=t(5707),r=(t(6887),t(8409),t(6109)),s=t(3494);t(2851);const i=n.AH`
  :host {
    display: block;
  }

  :host > button {
    gap: var(--wui-spacing-xxs);
    padding: var(--wui-spacing-xs);
    padding-right: var(--wui-spacing-1xs);
    height: 40px;
    border-radius: var(--wui-border-radius-l);
    background: var(--wui-color-gray-glass-002);
    border-width: 0px;
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-002);
  }

  :host > button wui-image {
    width: 24px;
    height: 24px;
    border-radius: var(--wui-border-radius-s);
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-010);
  }
`;var c=function(e,o,t,n){var a,r=arguments.length,s=r<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,t):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,o,t,n);else for(var i=e.length-1;i>=0;i--)(a=e[i])&&(s=(r<3?a(s):r>3?a(o,t,s):a(o,t))||s);return r>3&&s&&Object.defineProperty(o,t,s),s};let u=class extends n.WF{constructor(){super(...arguments),this.text=""}render(){return n.qy`
      <button>
        ${this.tokenTemplate()}
        <wui-text variant="paragraph-600" color="fg-100">${this.text}</wui-text>
      </button>
    `}tokenTemplate(){return this.imageSrc?n.qy`<wui-image src=${this.imageSrc}></wui-image>`:n.qy`
      <wui-icon-box
        size="sm"
        iconColor="fg-200"
        backgroundColor="fg-300"
        icon="networkPlaceholder"
      ></wui-icon-box>
    `}};u.styles=[r.W5,r.fD,i],c([(0,a.MZ)()],u.prototype,"imageSrc",void 0),c([(0,a.MZ)()],u.prototype,"text",void 0),u=c([(0,s.E)("wui-token-button")],u)},2965:(e,o,t)=>{t(8848)},6887:(e,o,t)=>{var n=t(2618),a=t(5707),r=t(6109),s=t(3494);const i=n.AH`
  :host {
    display: block;
    width: var(--local-width);
    height: var(--local-height);
  }

  img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center center;
    border-radius: inherit;
  }
`;var c=function(e,o,t,n){var a,r=arguments.length,s=r<3?o:null===n?n=Object.getOwnPropertyDescriptor(o,t):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,o,t,n);else for(var i=e.length-1;i>=0;i--)(a=e[i])&&(s=(r<3?a(s):r>3?a(o,t,s):a(o,t))||s);return r>3&&s&&Object.defineProperty(o,t,s),s};let u=class extends n.WF{constructor(){super(...arguments),this.src="./path/to/image.jpg",this.alt="Image",this.size=void 0}render(){return this.style.cssText=`\n      --local-width: ${this.size?`var(--wui-icon-size-${this.size});`:"100%"};\n      --local-height: ${this.size?`var(--wui-icon-size-${this.size});`:"100%"};\n      `,n.qy`<img src=${this.src} alt=${this.alt} @error=${this.handleImageError} />`}handleImageError(){this.dispatchEvent(new CustomEvent("onLoadError",{bubbles:!0,composed:!0}))}};u.styles=[r.W5,r.ck,i],c([(0,a.MZ)()],u.prototype,"src",void 0),c([(0,a.MZ)()],u.prototype,"alt",void 0),c([(0,a.MZ)()],u.prototype,"size",void 0),u=c([(0,s.E)("wui-image")],u)},7127:(e,o,t)=>{t.d(o,{GN:()=>N});var n=t(9073),a=t(4707),r=t(3768),s=t(4376),i=t(152),c=t(2944),u=t(6742),d=t(3326),l=t(3450),T=t(5595),k=t(7388),m=t(9177);const p={async getTokenList(){const e=k.W.state.activeCaipNetwork,o=await T.T.fetchSwapTokens({chainId:e?.caipNetworkId});return o?.tokens?.map((e=>({...e,eip2612:!1,quantity:{decimals:"0",numeric:"0"},price:0,value:0})))||[]},async fetchGasPrice(){const e=k.W.state.activeCaipNetwork;if(!e)return null;try{if("solana"===e.chainNamespace){const e=(await(m.x?.estimateGas({chainNamespace:"solana"})))?.toString();return{standard:e,fast:e,instant:e}}return await T.T.fetchGasPrice({chainId:e.caipNetworkId})}catch{return null}},async fetchSwapAllowance({tokenAddress:e,userAddress:o,sourceTokenAmount:t,sourceTokenDecimals:n}){const a=await T.T.fetchSwapAllowance({tokenAddress:e,userAddress:o});if(a?.allowance&&t&&n){const e=m.x.parseUnits(t,n)||0;return BigInt(a.allowance)>=e}return!1},async getMyTokensWithBalance(e){const o=l.U.state.address,t=k.W.state.activeCaipNetwork;if(!o||!t)return[];const n=(await T.T.getBalance(o,t.caipNetworkId,e)).balances.filter((e=>"0"!==e.quantity.decimals));return l.U.setTokenBalance(n,k.W.state.activeChain),this.mapBalancesToSwapTokens(n)},mapBalancesToSwapTokens:e=>e?.map((e=>({...e,address:e?.address?e.address:k.W.getActiveNetworkTokenAddress(),decimals:parseInt(e.quantity.decimals,10),logoUri:e.iconUrl,eip2612:!1})))||[]},g={getGasPriceInEther:(e,o)=>Number(o*e)/1e18,getGasPriceInUSD(e,o,t){const n=g.getGasPriceInEther(o,t);return r.S.bigNumber(e).times(n).toNumber()},getPriceImpact({sourceTokenAmount:e,sourceTokenPriceInUSD:o,toTokenPriceInUSD:t,toTokenAmount:n}){const a=r.S.bigNumber(e).times(o),s=r.S.bigNumber(n).times(t);return a.minus(s).div(a).times(100).toNumber()},getMaxSlippage(e,o){const t=r.S.bigNumber(e).div(100);return r.S.multiply(o,t).toNumber()},getProviderFee:(e,o=.0085)=>r.S.bigNumber(e).times(o).toString(),isInsufficientNetworkTokenForGas(e,o){const t=o||"0";return!!r.S.bigNumber(e).eq(0)||r.S.bigNumber(r.S.bigNumber(t)).gt(e)},isInsufficientSourceTokenForSwap(e,o,t){const n=t?.find((e=>e.address===o))?.quantity?.numeric;return r.S.bigNumber(n||"0").lt(e)},getToTokenAmount({sourceToken:e,toToken:o,sourceTokenPrice:t,toTokenPrice:n,sourceTokenAmount:a}){if("0"===a)return"0";if(!e||!o)return"0";const s=e.decimals,i=t,c=o.decimals,u=n;if(u<=0)return"0";const d=r.S.bigNumber(a).times(.0085),l=r.S.bigNumber(a).minus(d).times(r.S.bigNumber(10).pow(s)),T=r.S.bigNumber(i).div(u),k=s-c;return l.times(T).div(r.S.bigNumber(10).pow(k)).div(r.S.bigNumber(10).pow(c)).toFixed(c).toString()}};var w=t(5940),A=t(1655),h=t(9088),S=t(184),v=t(8508),P=t(1871);const f=15e4;Error;const b={initializing:!1,initialized:!1,loadingPrices:!1,loadingQuote:!1,loadingApprovalTransaction:!1,loadingBuildTransaction:!1,loadingTransaction:!1,fetchError:!1,approvalTransaction:void 0,swapTransaction:void 0,transactionError:void 0,sourceToken:void 0,sourceTokenAmount:"",sourceTokenPriceInUSD:0,toToken:void 0,toTokenAmount:"",toTokenPriceInUSD:0,networkPrice:"0",networkBalanceInUSD:"0",networkTokenSymbol:"",inputError:void 0,slippage:c.oU.CONVERT_SLIPPAGE_TOLERANCE,tokens:void 0,popularTokens:void 0,suggestedTokens:void 0,foundTokens:void 0,myTokensWithBalance:void 0,tokensPriceMap:{},gasFee:"0",gasPriceInUSD:0,priceImpact:void 0,maxSlippage:void 0,providerFee:void 0},y=(0,n.BX)(b),I={state:y,subscribe:e=>(0,n.B1)(y,(()=>e(y))),subscribeKey:(e,o)=>(0,a.u$)(y,e,o),getParams(){const e=k.W.state.activeCaipAddress,o=k.W.state.activeChain,t=u.w.getPlainAddress(e),n=k.W.getActiveNetworkTokenAddress(),a=h.a.getConnectorId(o);if(!t)throw new Error("No address found to swap the tokens from.");const i=!y.toToken?.address||!y.toToken?.decimals,c=!y.sourceToken?.address||!y.sourceToken?.decimals||!r.S.bigNumber(y.sourceTokenAmount).gt(0),d=!y.sourceTokenAmount;return{networkAddress:n,fromAddress:t,fromCaipAddress:e,sourceTokenAddress:y.sourceToken?.address,toTokenAddress:y.toToken?.address,toTokenAmount:y.toTokenAmount,toTokenDecimals:y.toToken?.decimals,sourceTokenAmount:y.sourceTokenAmount,sourceTokenDecimals:y.sourceToken?.decimals,invalidToToken:i,invalidSourceToken:c,invalidSourceTokenAmount:d,availableToSwap:e&&!i&&!c&&!d,isAuthConnector:a===s.o.CONNECTOR_ID.AUTH}},setSourceToken(e){if(!e)return y.sourceToken=e,y.sourceTokenAmount="",void(y.sourceTokenPriceInUSD=0);y.sourceToken=e,N.setTokenPrice(e.address,"sourceToken")},setSourceTokenAmount(e){y.sourceTokenAmount=e},setToToken(e){if(!e)return y.toToken=e,y.toTokenAmount="",void(y.toTokenPriceInUSD=0);y.toToken=e,N.setTokenPrice(e.address,"toToken")},setToTokenAmount(e){y.toTokenAmount=e?r.S.formatNumberToLocalString(e,6):""},async setTokenPrice(e,o){let t=y.tokensPriceMap[e]||0;t||(y.loadingPrices=!0,t=await N.getAddressPrice(e)),"sourceToken"===o?y.sourceTokenPriceInUSD=t:"toToken"===o&&(y.toTokenPriceInUSD=t),y.loadingPrices&&(y.loadingPrices=!1),N.getParams().availableToSwap&&N.swapTokens()},switchTokens(){if(y.initializing||!y.initialized)return;const e=y.toToken?{...y.toToken}:void 0,o=y.sourceToken?{...y.sourceToken}:void 0,t=e&&""===y.toTokenAmount?"1":y.toTokenAmount;N.setSourceToken(e),N.setToToken(o),N.setSourceTokenAmount(t),N.setToTokenAmount(""),N.swapTokens()},resetState(){y.myTokensWithBalance=b.myTokensWithBalance,y.tokensPriceMap=b.tokensPriceMap,y.initialized=b.initialized,y.sourceToken=b.sourceToken,y.sourceTokenAmount=b.sourceTokenAmount,y.sourceTokenPriceInUSD=b.sourceTokenPriceInUSD,y.toToken=b.toToken,y.toTokenAmount=b.toTokenAmount,y.toTokenPriceInUSD=b.toTokenPriceInUSD,y.networkPrice=b.networkPrice,y.networkTokenSymbol=b.networkTokenSymbol,y.networkBalanceInUSD=b.networkBalanceInUSD,y.inputError=b.inputError,y.myTokensWithBalance=b.myTokensWithBalance},resetValues(){const{networkAddress:e}=N.getParams(),o=y.tokens?.find((o=>o.address===e));N.setSourceToken(o),N.setToToken(void 0)},getApprovalLoadingState:()=>y.loadingApprovalTransaction,clearError(){y.transactionError=void 0},async initializeState(){if(!y.initializing){if(y.initializing=!0,!y.initialized)try{await N.fetchTokens(),y.initialized=!0}catch(e){y.initialized=!1,P.P.showError("Failed to initialize swap"),v.I.goBack()}y.initializing=!1}},async fetchTokens(){const{networkAddress:e}=N.getParams();await N.getTokenList(),await N.getNetworkTokenPrice(),await N.getMyTokensWithBalance();const o=y.tokens?.find((o=>o.address===e));o&&(y.networkTokenSymbol=o.symbol,N.setSourceToken(o),N.setSourceTokenAmount("1"))},async getTokenList(){const e=await p.getTokenList();y.tokens=e,y.popularTokens=e.sort(((e,o)=>e.symbol<o.symbol?-1:e.symbol>o.symbol?1:0)),y.suggestedTokens=e.filter((e=>!!c.oU.SWAP_SUGGESTED_TOKENS.includes(e.symbol)),{})},async getAddressPrice(e){const o=y.tokensPriceMap[e];if(o)return o;const t=await T.T.fetchTokenPrice({addresses:[e]}),n=t?.fungibles||[],a=[...y.tokens||[],...y.myTokensWithBalance||[]],r=a?.find((o=>o.address===e))?.symbol,s=n.find((e=>e.symbol.toLowerCase()===r?.toLowerCase()))?.price||0,i=parseFloat(s.toString());return y.tokensPriceMap[e]=i,i},async getNetworkTokenPrice(){const{networkAddress:e}=N.getParams(),o=await T.T.fetchTokenPrice({addresses:[e]}).catch((()=>(P.P.showError("Failed to fetch network token price"),{fungibles:[]}))),t=o.fungibles?.[0],n=t?.price.toString()||"0";y.tokensPriceMap[e]=parseFloat(n),y.networkTokenSymbol=t?.symbol||"",y.networkPrice=n},async getMyTokensWithBalance(e){const o=await d.t.getMyTokensWithBalance(e),t=d.t.mapBalancesToSwapTokens(o);t&&(await N.getInitialGasPrice(),N.setBalances(t))},setBalances(e){const{networkAddress:o}=N.getParams(),t=k.W.state.activeCaipNetwork;if(!t)return;const n=e.find((e=>e.address===o));e.forEach((e=>{y.tokensPriceMap[e.address]=e.price||0})),y.myTokensWithBalance=e.filter((e=>e.address.startsWith(t.caipNetworkId))),y.networkBalanceInUSD=n?r.S.multiply(n.quantity.numeric,n.price).toString():"0"},async getInitialGasPrice(){const e=await p.fetchGasPrice();if(!e)return{gasPrice:null,gasPriceInUSD:null};if("solana"===k.W.state?.activeCaipNetwork?.chainNamespace)return y.gasFee=e.standard??"0",y.gasPriceInUSD=r.S.multiply(e.standard,y.networkPrice).div(1e9).toNumber(),{gasPrice:BigInt(y.gasFee),gasPriceInUSD:Number(y.gasPriceInUSD)};{const o=e.standard??"0",t=BigInt(o),n=BigInt(f),a=g.getGasPriceInUSD(y.networkPrice,n,t);return y.gasFee=o,y.gasPriceInUSD=a,{gasPrice:t,gasPriceInUSD:a}}},async swapTokens(){const e=l.U.state.address,o=y.sourceToken,t=y.toToken,n=r.S.bigNumber(y.sourceTokenAmount).gt(0);if(n||N.setToTokenAmount(""),!t||!o||y.loadingPrices||!n)return;y.loadingQuote=!0;const a=r.S.bigNumber(y.sourceTokenAmount).times(10**o.decimals).round(0);try{const n=await T.T.fetchSwapQuote({userAddress:e,from:o.address,to:t.address,gasPrice:y.gasFee,amount:a.toString()});y.loadingQuote=!1;const s=n?.quotes?.[0]?.toAmount;if(!s)return void A.h.open({shortMessage:"Incorrect amount",longMessage:"Please enter a valid amount"},"error");const i=r.S.bigNumber(s).div(10**t.decimals).toString();N.setToTokenAmount(i),N.hasInsufficientToken(y.sourceTokenAmount,o.address)?y.inputError="Insufficient balance":(y.inputError=void 0,N.setTransactionDetails())}catch(e){y.loadingQuote=!1,y.inputError="Insufficient balance"}},async getTransaction(){const{fromCaipAddress:e,availableToSwap:o}=N.getParams(),t=y.sourceToken,n=y.toToken;if(e&&o&&t&&n&&!y.loadingQuote)try{let o;return y.loadingBuildTransaction=!0,o=await p.fetchSwapAllowance({userAddress:e,tokenAddress:t.address,sourceTokenAmount:y.sourceTokenAmount,sourceTokenDecimals:t.decimals})?await N.createSwapTransaction():await N.createAllowanceTransaction(),y.loadingBuildTransaction=!1,y.fetchError=!1,o}catch(e){return v.I.goBack(),P.P.showError("Failed to check allowance"),y.loadingBuildTransaction=!1,y.approvalTransaction=void 0,y.swapTransaction=void 0,void(y.fetchError=!0)}},async createAllowanceTransaction(){const{fromCaipAddress:e,sourceTokenAddress:o,toTokenAddress:t}=N.getParams();if(e&&t){if(!o)throw new Error("createAllowanceTransaction - No source token address found.");try{const n=await T.T.generateApproveCalldata({from:o,to:t,userAddress:e}),a={data:n.tx.data,to:u.w.getPlainAddress(n.tx.from),gasPrice:BigInt(n.tx.eip155.gasPrice),value:BigInt(n.tx.value),toAmount:y.toTokenAmount};return y.swapTransaction=void 0,y.approvalTransaction={data:a.data,to:a.to,gasPrice:a.gasPrice,value:a.value,toAmount:a.toAmount},{data:a.data,to:a.to,gasPrice:a.gasPrice,value:a.value,toAmount:a.toAmount}}catch(e){return v.I.goBack(),P.P.showError("Failed to create approval transaction"),y.approvalTransaction=void 0,y.swapTransaction=void 0,void(y.fetchError=!0)}}},async createSwapTransaction(){const{networkAddress:e,fromCaipAddress:o,sourceTokenAmount:t}=N.getParams(),n=y.sourceToken,a=y.toToken;if(!(o&&t&&n&&a))return;const r=m.x.parseUnits(t,n.decimals)?.toString();try{const t=await T.T.generateSwapCalldata({userAddress:o,from:n.address,to:a.address,amount:r,disableEstimate:!0}),s=n.address===e,i=BigInt(t.tx.eip155.gas),c=BigInt(t.tx.eip155.gasPrice),d={data:t.tx.data,to:u.w.getPlainAddress(t.tx.to),gas:i,gasPrice:c,value:s?BigInt(r??"0"):BigInt("0"),toAmount:y.toTokenAmount};return y.gasPriceInUSD=g.getGasPriceInUSD(y.networkPrice,i,c),y.approvalTransaction=void 0,y.swapTransaction=d,d}catch(e){return v.I.goBack(),P.P.showError("Failed to create transaction"),y.approvalTransaction=void 0,y.swapTransaction=void 0,void(y.fetchError=!0)}},async sendTransactionForApproval(e){const{fromAddress:o,isAuthConnector:t}=N.getParams();y.loadingApprovalTransaction=!0;const n="Approve limit increase in your wallet";t?v.I.pushTransactionStack({onSuccess(){P.P.showLoading(n)}}):P.P.showLoading(n);try{await m.x.sendTransaction({address:o,to:e.to,data:e.data,value:e.value,chainNamespace:"eip155"}),await N.swapTokens(),await N.getTransaction(),y.approvalTransaction=void 0,y.loadingApprovalTransaction=!1}catch(e){const o=e;y.transactionError=o?.shortMessage,y.loadingApprovalTransaction=!1,P.P.showError(o?.shortMessage||"Transaction error"),S.E.sendEvent({type:"track",event:"SWAP_APPROVAL_ERROR",properties:{message:o?.shortMessage||o?.message||"Unknown",network:k.W.state.activeCaipNetwork?.caipNetworkId||"",swapFromToken:N.state.sourceToken?.symbol||"",swapToToken:N.state.toToken?.symbol||"",swapFromAmount:N.state.sourceTokenAmount||"",swapToAmount:N.state.toTokenAmount||"",isSmartAccount:l.U.state.preferredAccountTypes?.eip155===i.Vl.ACCOUNT_TYPES.SMART_ACCOUNT}})}},async sendTransactionForSwap(e){if(!e)return;const{fromAddress:o,toTokenAmount:t,isAuthConnector:n}=N.getParams();y.loadingTransaction=!0;const a=`Swapping ${y.sourceToken?.symbol} to ${r.S.formatNumberToLocalString(t,3)} ${y.toToken?.symbol}`,s=`Swapped ${y.sourceToken?.symbol} to ${r.S.formatNumberToLocalString(t,3)} ${y.toToken?.symbol}`;n?v.I.pushTransactionStack({onSuccess(){v.I.replace("Account"),P.P.showLoading(a),I.resetState()}}):P.P.showLoading("Confirm transaction in your wallet");try{const t=[y.sourceToken?.address,y.toToken?.address].join(","),a=await m.x.sendTransaction({address:o,to:e.to,data:e.data,value:e.value,chainNamespace:"eip155"});return y.loadingTransaction=!1,P.P.showSuccess(s),S.E.sendEvent({type:"track",event:"SWAP_SUCCESS",properties:{network:k.W.state.activeCaipNetwork?.caipNetworkId||"",swapFromToken:N.state.sourceToken?.symbol||"",swapToToken:N.state.toToken?.symbol||"",swapFromAmount:N.state.sourceTokenAmount||"",swapToAmount:N.state.toTokenAmount||"",isSmartAccount:l.U.state.preferredAccountTypes?.eip155===i.Vl.ACCOUNT_TYPES.SMART_ACCOUNT}}),I.resetState(),n||v.I.replace("Account"),I.getMyTokensWithBalance(t),a}catch(e){const o=e;return y.transactionError=o?.shortMessage,y.loadingTransaction=!1,P.P.showError(o?.shortMessage||"Transaction error"),void S.E.sendEvent({type:"track",event:"SWAP_ERROR",properties:{message:o?.shortMessage||o?.message||"Unknown",network:k.W.state.activeCaipNetwork?.caipNetworkId||"",swapFromToken:N.state.sourceToken?.symbol||"",swapToToken:N.state.toToken?.symbol||"",swapFromAmount:N.state.sourceTokenAmount||"",swapToAmount:N.state.toTokenAmount||"",isSmartAccount:l.U.state.preferredAccountTypes?.eip155===i.Vl.ACCOUNT_TYPES.SMART_ACCOUNT}})}},hasInsufficientToken:(e,o)=>g.isInsufficientSourceTokenForSwap(e,o,y.myTokensWithBalance),setTransactionDetails(){const{toTokenAddress:e,toTokenDecimals:o}=N.getParams();e&&o&&(y.gasPriceInUSD=g.getGasPriceInUSD(y.networkPrice,BigInt(y.gasFee),BigInt(f)),y.priceImpact=g.getPriceImpact({sourceTokenAmount:y.sourceTokenAmount,sourceTokenPriceInUSD:y.sourceTokenPriceInUSD,toTokenPriceInUSD:y.toTokenPriceInUSD,toTokenAmount:y.toTokenAmount}),y.maxSlippage=g.getMaxSlippage(y.slippage,y.toTokenAmount),y.providerFee=g.getProviderFee(y.sourceTokenAmount))}},N=(0,w.X)(I)}}]);